services:
  discovery-server:
    build:
      context: ../../  # Path to project root (adjust as needed)
      dockerfile: services/discovery-server/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_INSTANCE_HOSTNAME=localhost
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database for services
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=crm_platform
      - POSTGRES_USER=crm_user
      - POSTGRES_PASSWORD=crm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  users-service:
    build:
      context: ../../  # Path to project root (adjust as needed)
      dockerfile: services/users-service/Dockerfile
    depends_on:
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_INSTANCE_HOSTNAME=localhost
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/crm_platform
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  tenant-service:
    build:
      context: ../../  # Path to project root (adjust as needed)
      dockerfile: services/tenant-service/Dockerfile
    depends_on:
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_INSTANCE_HOSTNAME=localhost
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/crm_platform
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  auth-service:
    build:
      context: ../../  # Path to project root (adjust as needed)
      dockerfile: services/auth-service/Dockerfile
    depends_on:
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      users-service:
        condition: service_healthy
      tenant-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_INSTANCE_HOSTNAME=localhost
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/crm_platform
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SERVICES_USER_SERVICE_URL=http://users-service:8083
      - SERVICES_TENANT_SERVICE_URL=http://tenant-service:8082
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
