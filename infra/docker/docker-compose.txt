services:
  # Service Discovery
  discovery-server:
    build:
      context: ../../
      dockerfile: services/discovery-server/Dockerfile
    container_name: crm-discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms256m -Xmx512m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Auth Service
  auth-service:
    build:
      context: ../../
      dockerfile: services/auth-service/Dockerfile
    container_name: crm-auth-service
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PASSWORD=redis_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - crm-network

  # Tenant Service
  tenant-service:
    build:
      context: ../../
      dockerfile: services/tenant-service/Dockerfile
    container_name: crm-tenant-service
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tenant_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - crm-network

  # Users Service
  users-service:
    build:
      context: ../../
      dockerfile: services/users-service/Dockerfile
    container_name: crm-users-service
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/users_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - crm-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: crm-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: crm_platform
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: crm-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - crm-network

  # Apache Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: crm-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - crm-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: crm-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - crm-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: crm-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: crm_user
      RABBITMQ_DEFAULT_PASS: crm_password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - crm-network

  # Elasticsearch for search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: crm-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - crm-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: crm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    depends_on:
      - alertmanager
    networks:
      - crm-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:10.2.0
    container_name: crm-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - crm-network

  # API Gateway
  api-gateway:
    build:
      context: ../../
      dockerfile: services/api-gateway/Dockerfile
    container_name: crm-api-gateway
    ports:
      - "8080:8080"
    depends_on:
      discovery-server:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PASSWORD=redis_password
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Notification Service
  notification-service:
    build:
      context: ../../
      dockerfile: services/notification-service/Dockerfile
    container_name: crm-notification-service
    ports:
      - "8093:8093"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/notification_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PASSWORD=redis_password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8093/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Business Services
  contacts-service:
    build:
      context: ../../
      dockerfile: services/contacts-service/Dockerfile
    container_name: crm-contacts-service
    ports:
      - "8084:8084"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/contacts_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PASSWORD=redis_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - ELASTICSEARCH_HOST=elasticsearch
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  deals-service:
    build:
      context: ../../
      dockerfile: services/deals-service/Dockerfile
    container_name: crm-deals-service
    ports:
      - "8085:8085"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/deals_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  leads-service:
    build:
      context: ../../
      dockerfile: services/leads-service/Dockerfile
    container_name: crm-leads-service
    ports:
      - "8086:8086"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/leads_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PASSWORD=redis_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  accounts-service:
    build:
      context: ../../
      dockerfile: services/accounts-service/Dockerfile
    container_name: crm-accounts-service
    ports:
      - "8087:8087"
    depends_on:
      postgres:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/accounts_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  activities-service:
    build:
      context: ../../
      dockerfile: services/activities-service/Dockerfile
    container_name: crm-activities-service
    ports:
      - "8088:8088"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/activities_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=crm_user
      - SPRING_RABBITMQ_PASSWORD=crm_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pipelines-service:
    build:
      context: ../../
      dockerfile: services/pipelines-service/Dockerfile
    container_name: crm-pipelines-service
    ports:
      - "8089:8089"
    depends_on:
      postgres:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/pipelines_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  custom-objects-service:
    build:
      context: ../../
      dockerfile: services/custom-objects-service/Dockerfile
    container_name: crm-custom-objects-service
    ports:
      - "8092:8092"
    depends_on:
      postgres:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/custom_objects_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  analytics-service:
    build:
      context: ../../
      dockerfile: services/analytics-service/Dockerfile
    container_name: crm-analytics-service
    ports:
      - "8090:8090"
    depends_on:
      postgres:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/analytics_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  workflow-service:
    build:
      context: ../../
      dockerfile: services/workflow-service/Dockerfile
    container_name: crm-workflow-service
    ports:
      - "8091:8091"
    depends_on:
      postgres:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/workflow_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - JAVA_OPTS=-Xms512m -Xmx1024m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Zipkin for distributed tracing
  zipkin:
    image: openzipkin/zipkin:2.24
    container_name: crm-zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mem
    restart: unless-stopped
    networks:
      - crm-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Alertmanager for alert handling
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: crm-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - crm-network

  # PostgreSQL Exporter for database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: crm-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://crm_user:crm_password@postgres:5432/crm_platform?sslmode=disable"
    depends_on:
      - postgres
    networks:
      - crm-network

  # Redis Exporter for cache metrics
  redis-exporter:
    image: oliver006/redis_exporter:v1.55.0
    container_name: crm-redis-exporter
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: "redis://redis:6379"
      REDIS_PASSWORD: "redis_password"
    depends_on:
      - redis
    networks:
      - crm-network

  # Kafka Exporter for message queue metrics
  kafka-exporter:
    image: danielqsj/kafka-exporter:v1.7.0
    container_name: crm-kafka-exporter
    ports:
      - "9308:9308"
    command:
      - '--kafka.server=kafka:29092'
    depends_on:
      - kafka
    networks:
      - crm-network

  # Logstash for log processing
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: crm-logstash
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    volumes:
      - ./config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./config/logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    depends_on:
      - elasticsearch
    networks:
      - crm-network

  # Kibana for log visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: crm-kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: kibana_password
    depends_on:
      - elasticsearch
    networks:
      - crm-network

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  zookeeper_data:
  zookeeper_logs:
  rabbitmq_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  crm-network:
    driver: bridge