version: "2.4"

services:
  postgres:
    image: postgres:15-alpine
    container_name: crm-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: crm_platform
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - crm-network

  redis:
    image: redis:7-alpine
    container_name: crm-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - crm-network

  discovery-server:
    build:
      context: ../..
      dockerfile: services/discovery-server/Dockerfile
    container_name: crm-discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_INSTANCE_HOSTNAME=discovery-server
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - crm-network
    # depends_on:
    #   - postgres
    #   - redis

volumes:
  postgres_data:
  redis_data:

networks:
  crm-network:
    driver: bridge
