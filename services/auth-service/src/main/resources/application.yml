server:
  port: 8081

spring:
  application:
    name: auth-service
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:h2:mem:auth_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000

---
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5433/crm_platform
    username: crm_user
    password: crm_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  flyway:
    enabled: false
  
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081

# Application specific configuration
app:
  frontend:
    base-url: http://localhost:3000
  
  email:
    enabled: false
    from: noreply@crm-platform.com
  
  security:
    email-verification:
      token-expiry-hours: 24
      max-attempts: 3
      max-resends-per-hour: 3
      resend-cooldown-minutes: 5
      cleanup-days: 7
    
    password:
      min-length: 8
      max-length: 128
      require-uppercase: true
      require-lowercase: true
      require-numbers: true
      require-special-chars: true
      min-special-chars: 1
      prevent-common-passwords: true
      prevent-password-reuse: true
      history-count: 5
      expiry-days: 90
      reset-token-expiry-hours: 24
      max-reset-attempts-per-hour: 3
      expiry-warning-days: 7

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.crm.platform.auth: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

jwt:
  secret: ThisIsAReallyLongAndSecureSecretKeyForJWTGenerationThatIsAtLeast256BitsLong
  access-token-validity-minutes: 15
  refresh-token-validity-days: 7

auth:
  max-failed-attempts: 5
  lockout-duration-minutes: 30

services:
  user-service:
    url: http://localhost:8082